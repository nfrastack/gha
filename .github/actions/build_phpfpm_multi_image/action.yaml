name: "Docker Login"
description: "Logs into DockerHub and GitHub Container Registry"
inputs:
  docker_username:
    description: "DockerHub Username"
    required: true
  docker_password:
    description: "DockerHub Password"
    required: true
  github_token:
    description: "GitHub Token for GitHub Container Registry"
    required: true

runs:
  using: "composite"
  steps:
    - name: Do we need to clean the repository
      id: clean
      shell: bash
      run: |
        if [ -f "cleanup.sh" ] ; then
          chmod +x cleanup.sh
          ./cleanup.sh
        fi

    - name: Determine Branch Name and Set Variables
      id: prep
      shell: bash
      run: |
        if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            if [[ "${GITHUB_REF}" == refs/heads/*/* ]] ; then
                git_branch="${GITHUB_REPOSITORY/container-/}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
            else
                git_branch=${GITHUB_REF#refs/heads/}
            fi

            case "${git_branch}" in
                "main" | "master" )
                    # Compose tag in format: <phpversion>-<distro>-<distro_variant>-<image_variant>
                    build_identity="${PHP_BASE}-${DISTRO,,}_${DISTRO_VARIANT,,}_${IMAGE_VARIANT,,}"
                    extra_tags=""
                    if [ "${IMAGE_VARIANT}" = "faflopza" ]; then
                      # Only the default image_variant gets the simple tags
                      # Always add :<php_version>-<distro> tag if this is the default variant for the distro
                      if [ "${DISTRO_LATEST,,}" = "true" ]; then
                        extra_tags=",${GITHUB_REPOSITORY}:${PHP_BASE}-${DISTRO,,}"
                      fi
                      # Always add :<php_version>-<distro>_<distro_variant> tag
                      extra_tags="${extra_tags},${GITHUB_REPOSITORY}:${PHP_BASE}-${DISTRO,,}_${DISTRO_VARIANT,,}"
                      # Always add :<distro> tag
                      extra_tags="${extra_tags},${GITHUB_REPOSITORY}:${DISTRO,,}"
                      # Always add :<php_version> tag if php_version_latest is true
                      if [ "${PHP_VERSION_LATEST,,}" = "true" ]; then
                        extra_tags="${extra_tags},${GITHUB_REPOSITORY}:${PHP_BASE}"
                      fi
                      # Always add :latest tag if latest is true
                      if [ "${LATEST,,}" = "true" ]; then
                        extra_tags="${extra_tags},${GITHUB_REPOSITORY}:latest"
                      fi
                      # Remove leading comma
                      extra_tags="${extra_tags#,}"
                      branch_tag="${GITHUB_REPOSITORY}:${build_identity},${extra_tags}"
                    else
                      # Other variants only get the full build identity tag
                      branch_tag="${GITHUB_REPOSITORY}:${build_identity}"
                    fi
                ;;
                "develop" )
                    branch_tag="${GITHUB_REPOSITORY}:develop"
                ;;
            esac
        fi

        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          base_tag="$(echo ${GITHUB_REF} | sed 's|refs/tags/||g')"
          git_tag=""
          # Always tag the full build identity
          if [ "${IMAGE_VARIANT}" = "faflopza" ]; then
            variant_tag="${GITHUB_REPOSITORY}:${base_tag}-${DISTRO,,}_${DISTRO_VARIANT,,}_faflopza"
            # Add simple tags for default variant
            simple_tag="${GITHUB_REPOSITORY}:${base_tag}-${DISTRO,,}"
            php_tag="${GITHUB_REPOSITORY}:${base_tag}"
            git_tag="$variant_tag,$simple_tag,$php_tag"
          else
            variant_tag="${GITHUB_REPOSITORY}:${base_tag}-${DISTRO,,}_${DISTRO_VARIANT,,}_${IMAGE_VARIANT,,}"
            git_tag="$variant_tag"
          fi
            fi

            if [ -n "${branch_tag}" ] && [ -n "${git_tag}" ]; then
                image_tags=${branch_tag},${git_tag}
            else
                image_tags="${branch_tag}${git_tag}"
            fi

            echo "dockerhub_repo=${GITHUB_REPOSITORY/container-/}" >> $GITHUB_ENV
            dockerhub_images=$(echo "${image_tags}" | sed "s|${GITHUB_REPOSITORY}|docker.io/${GITHUB_REPOSITORY/container-/}|g")
            ghcr_images=$(echo "${image_tags}" | sed "s|${GITHUB_REPOSITORY}|ghcr.io/${GITHUB_REPOSITORY}|g")
            echo "container_images=${dockerhub_images},${ghcr_images}" >> $GITHUB_OUTPUT
    - name: Label
      id: Label
      shell: bash
      run: |
        image_name=${GITHUB_REPOSITORY/${GITHUB_REPOSITORY_OWNER}\/container-/image.}
        if [ -f "Containerfile" ] ; then
            sed -i \
                    -e "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" \
                    -e "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.git_commit=\"${GITHUB_SHA}\"" \
                    -e "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.git_committed_by=\"${GITHUB_ACTOR}\"" \
                    -e "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" \
                    -e "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.distro=\"${DISTRO}\"" \
                    -e "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.distro_variant=\"${DISTRO_VARIANT}\"" \
                    -e "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.image_variant=\"${IMAGE_VARIANT}\"" \
                    -e "/FROM .*/a LABEL org.opencontainers.image.source=\"https://github.com/${GITHUB_REPOSITORY}\"" \
                  Containerfile

            if [[ $GITHUB_REF == refs/tags/* ]]; then
                sed -i "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.git_tag=\"${GITHUB_REF#refs/tags/v}\"" Containerfile
            fi

           if [[ $GITHUB_REF == refs/heads/* ]]; then
                sed -i "/FROM .*/a LABEL ${GITHUB_REPOSITORY_OWNER}.${image_name}.git_branch=\"${GITHUB_REF#refs/heads/}\"" Containerfile
            fi
        fi

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v6
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Containerfile
        platforms: ${{ env.ARCH }}
        push: true
        tags: ${{ steps.prep.outputs.container_images }}
        build-args: |
          BASE_IMAGE=${{ env.BASE_IMAGE }}
          DISTRO=${{ env.DISTRO }}
          PHP_BASE=${{ env.PHP_BASE }}
          DISTRO_VARIANT=${{ env.IMAGE_VARIANT && format('{0}_{1}', env.DISTRO_VARIANT, env.IMAGE_VARIANT) || env.DISTRO_VARIANT }}
          ${{ env.IMAGE_VARIANT && format('IMAGE_VARIANT={0}', env.IMAGE_VARIANT) || '' }}
